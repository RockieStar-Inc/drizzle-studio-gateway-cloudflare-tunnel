name: Release Binaries

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-binaries:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: bun-linux-x64
            os: linux
            arch: x64
            ext: ''
          - target: bun-linux-arm64
            os: linux
            arch: arm64
            ext: ''
          - target: bun-darwin-x64
            os: macos
            arch: x64
            ext: ''
          - target: bun-darwin-arm64
            os: macos
            arch: arm64
            ext: ''
          - target: bun-windows-x64
            os: windows
            arch: x64
            ext: '.exe'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build executable
        run: |
          bun build \
            --compile \
            --target=${{ matrix.target }} \
            --minify \
            --sourcemap \
            ./src/index.ts \
            --outfile=drizzle-gateway-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}

      - name: Test executable (Linux/macOS only)
        if: matrix.os != 'windows'
        run: |
          chmod +x drizzle-gateway-${{ matrix.os }}-${{ matrix.arch }}
          ./drizzle-gateway-${{ matrix.os }}-${{ matrix.arch }} --version || echo "Version check not implemented"

      - name: Compress executable
        run: |
          if [ "${{ matrix.os }}" = "windows" ]; then
            zip drizzle-gateway-${{ matrix.os }}-${{ matrix.arch }}.zip drizzle-gateway-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}
          else
            tar -czf drizzle-gateway-${{ matrix.os }}-${{ matrix.arch }}.tar.gz drizzle-gateway-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: drizzle-gateway-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            drizzle-gateway-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
            drizzle-gateway-${{ matrix.os }}-${{ matrix.arch }}.zip

  create-release:
    needs: build-binaries
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Get tag name
        id: tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release Notes
        id: notes
        run: |
          cat << EOF > release_notes.md
          # Drizzle Studio Gateway with Cloudflare Tunnel - ${{ steps.tag.outputs.tag }}
          
          ## Installation
          
          ### Using Pre-built Binaries
          
          Download the appropriate binary for your platform:
          
          - **Linux x64**: \`drizzle-gateway-linux-x64.tar.gz\`
          - **Linux ARM64**: \`drizzle-gateway-linux-arm64.tar.gz\`
          - **macOS x64 (Intel)**: \`drizzle-gateway-macos-x64.tar.gz\`
          - **macOS ARM64 (Apple Silicon)**: \`drizzle-gateway-macos-arm64.tar.gz\`
          - **Windows x64**: \`drizzle-gateway-windows-x64.zip\`
          
          ### Quick Start
          
          \`\`\`bash
          # Download and extract (macOS/Linux)
          tar -xzf drizzle-gateway-<platform>.tar.gz
          
          # Make executable
          chmod +x drizzle-gateway-<platform>
          
          # Run with environment variables
          DRIZZLE_GATEWAY_MASTERPASS=your-password ./drizzle-gateway-<platform>
          \`\`\`
          
          ### Docker Image
          
          \`\`\`bash
          docker pull ghcr.io/rockiestar-inc/drizzle-studio-gateway-cloudflare-tunnel:${{ steps.tag.outputs.tag }}
          \`\`\`
          
          ## What's Changed
          
          See [full changelog](https://github.com/${{ github.repository }}/compare/$(git describe --tags --abbrev=0 HEAD^)...${{ steps.tag.outputs.tag }})
          
          ## Checksums
          
          \`\`\`
          $(cd artifacts && sha256sum */*.tar.gz */*.zip 2>/dev/null || true)
          \`\`\`
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Release ${{ steps.tag.outputs.tag }}
          body_path: release_notes.md
          draft: false
          prerelease: ${{ contains(steps.tag.outputs.tag, 'beta') || contains(steps.tag.outputs.tag, 'alpha') }}
          files: |
            artifacts/*/*.tar.gz
            artifacts/*/*.zip